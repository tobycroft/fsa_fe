{"version":3,"file":"js/9086.56b14e26.js","mappings":"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","sources":["webpack://home_research_h5/./src/views/preachRegionalCoverageNumberRank/index.vue?0cd6","webpack://home_research_h5/src/views/preachRegionalCoverageNumberRank/index.vue","webpack://home_research_h5/./src/views/preachRegionalCoverageNumberRank/index.vue?62d2","webpack://home_research_h5/./src/views/preachRegionalCoverageNumberRank/index.vue","webpack://home_research_h5/./src/utils/common.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"preach-regional-coverage-number-rank-container\"},[_c('TopList',{attrs:{\"list\":_vm.topListCoverCmp,\"showTitle\":false}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"preach-regional-coverage-number-rank-container\">\r\n    <TopList :list=\"topListCoverCmp\" :showTitle=\"false\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { handleAreaLevel } from \"@/utils/common\";\r\n\r\nexport default {\r\n  components: {\r\n    TopList: () => import(\"@/components/TopList\"),\r\n  },\r\n  computed: {\r\n    // 排行榜:覆盖\r\n    topListCoverCmp() {\r\n      const arr = [];\r\n      this.coverList.forEach((item) => {\r\n        console.log(\"item :>> \", item);\r\n        for (const arrItem of arr) {\r\n          if (arrItem.name === item.city) {\r\n            arrItem.value += item.sum_visitor;\r\n            return;\r\n          }\r\n        }\r\n        arr.push({\r\n          label: this.handleAreaText(item),\r\n          value: `${item.sum_visitor}人`,\r\n        });\r\n      });\r\n\r\n      console.log(\"排行榜:覆盖arr :>> \", arr);\r\n      return arr;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // 覆盖列表\r\n      coverList: [],\r\n    };\r\n  },\r\n  async created() {\r\n    if(!this.$store.getters.associationInfo || !this.$store.getters.associationInfo.id) {\r\n      await this.$store.dispatch(\"association/associationInfoDomainAPI\")\r\n    }\r\n    this.coverListAPI();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 处理区域数据\r\n     */\r\n    handleAreaText(item) {\r\n      const modelType = this.$store.getters.associationInfo.model_type;\r\n      switch (modelType) {\r\n        case \"district\":\r\n          return `${item.district}${item.street}`;\r\n\r\n        default:\r\n          return `${item.province}${item.city}${item.district}${item.street}`;\r\n      }\r\n    },\r\n    /**\r\n     * 覆盖列表API\r\n     */\r\n    async coverListAPI() {\r\n      const aid = this.$store.getters.associationInfo.id;\r\n      const modelType = handleAreaLevel(\r\n        this.$store.getters.associationInfo.model_type\r\n      );\r\n      const data = { aid, type: modelType };\r\n      const res = await this.$request(\"common.coverList\", data);\r\n      console.log(\"覆盖列表API_res :>> \", res);\r\n      this.coverList = res;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.preach-regional-coverage-number-rank-container {\r\n  padding: px(24);\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=a990ab9a&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=a990ab9a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a990ab9a\",\n  null\n  \n)\n\nexport default component.exports","/**\r\n * 计算百分比\r\n * @param {Number} num 数量\r\n * @param {Number} total 总数\r\n * @returns {Number} 百分比\r\n */\r\nexport function percentage(num, total) {\r\n  if (num && total) {\r\n    return (num / total) * 100;\r\n  }\r\n  console.log(\"percentage函数参数异常: :>> \", num, total);\r\n  return 0;\r\n}\r\n\r\n/**\r\n * 比较两个日期大小\r\n * @param d1 {dateString} 第一个日期\r\n * @param d2 {dateString} 第二个日期\r\n *\r\n * @return Boolean\r\n * */\r\nexport const compareDate = (d1, d2) => {\r\n  let date1 = new Date(Date.parse(d1));\r\n  let date2 = new Date(Date.parse(d2));\r\n  return date1 > date2;\r\n};\r\n\r\n/**\r\n * 时间转换工具函数\r\n * @param {Number} time 当前时间数字\r\n * @param {String} targetUnit 当前时间单位(时H&h|分M&m|S*s秒)\r\n * @param {String} resultUnit 转换结果时间单位(时H&h|分M&m|S*s秒)\r\n * @returns 返回转换时间结果\r\n */\r\nexport const timeConversion = (time, targetUnit, resultUnit) => {\r\n  switch (targetUnit) {\r\n    case \"H\":\r\n    case \"h\":\r\n      if (resultUnit === \"H\" || resultUnit === \"h\") {\r\n        return time;\r\n      }\r\n      if (resultUnit === \"M\" || resultUnit === \"m\") {\r\n        return time * 60;\r\n      }\r\n      if (resultUnit === \"S\" || resultUnit === \"s\") {\r\n        return time * 60 * 60;\r\n      }\r\n      console.log(\"日期转换函数resultUnit参数不合法 :>> \");\r\n      break;\r\n    case \"M\":\r\n    case \"m\":\r\n      if (resultUnit === \"H\" || resultUnit === \"h\") {\r\n        return time / 60;\r\n      }\r\n      if (resultUnit === \"M\" || resultUnit === \"m\") {\r\n        return time;\r\n      }\r\n      if (resultUnit === \"S\" || resultUnit === \"s\") {\r\n        return time * 60;\r\n      }\r\n      console.log(\"日期转换函数resultUnit参数不合法 :>> \");\r\n      break;\r\n    case \"S\":\r\n    case \"s\":\r\n      if (resultUnit === \"H\" || resultUnit === \"h\") {\r\n        return time / 60 / 60;\r\n      }\r\n      if (resultUnit === \"M\" || resultUnit === \"m\") {\r\n        return time / 60;\r\n      }\r\n      if (resultUnit === \"S\" || resultUnit === \"s\") {\r\n        return time;\r\n      }\r\n      console.log(\"日期转换函数resultUnit参数不合法 :>> \");\r\n      break;\r\n\r\n    default:\r\n      console.log(\"日期转换函数targetUnit参数不合法 :>>\");\r\n      break;\r\n  }\r\n};\r\n\r\n/**\r\n * 处理搜索逻辑\r\n * @param {Array,Object} list 被搜索的数据源列表\r\n * @param {String} keyword 关键字\r\n * @param {String} keyname 要搜索的关键字字段名称,默认为name\r\n * @returns 返回过滤之后的列表\r\n */\r\nexport const handleSearch = (list, keyword, keyname = \"name\") => {\r\n  const newList = [];\r\n  list.forEach((item) => {\r\n    const hashVal = item[keyname].indexOf(keyword);\r\n    if (hashVal > -1) {\r\n      newList.push(item);\r\n    }\r\n  });\r\n  return newList;\r\n};\r\n\r\n/**\r\n * 隐藏手机号\r\n * @param {String} phone 手机号\r\n * @returns 隐藏过后的手机号\r\n */\r\nexport const handlePhoneHidden = (phone) => {\r\n  return phone.replace(/(\\d{3})\\d{4}(\\d{4})/, \"$1****$2\");\r\n};\r\n\r\n/**\r\n * 排序 反向排序\r\n * @param {Object} obj obj对象\r\n */\r\nexport const handleSortReverse = (obj) => {\r\n  const arr = [];\r\n  for (const key in obj) {\r\n    arr.push(obj[key]);\r\n  }\r\n  return arr.reverse();\r\n};\r\n\r\n/**\r\n * 判断当前所属平台(福建/古田)环境\r\n * @param {String} importType 源类型\r\n * @param {String} targretType 目标类型\r\n * @returns 是否是当前需要的类型\r\n */\r\nexport const hashDomain = (importType, targretType) => {\r\n  console.log(\"importType :>> \", importType);\r\n  let sourceType = \"\";\r\n  if (importType === \"default\" || importType === \"a\") {\r\n    sourceType = \"fj\";\r\n  }\r\n\r\n  if (importType === \"gt\") {\r\n    sourceType = \"gt\";\r\n  }\r\n\r\n  return sourceType === targretType;\r\n};\r\n\r\n/**\r\n * 获取显示区域等级\r\n * @param {String} modelType 当前区域等级\r\n * @returns 返回当前区域的下级区域等级\r\n */\r\nexport const handleAreaLevel = (modelType) => {\r\n  switch (modelType) {\r\n    case \"province\":\r\n      return \"city\";\r\n    case \"city\":\r\n      return \"district\";\r\n    case \"district\":\r\n      return \"street\";\r\n    case \"street\":\r\n      return \"street\";\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","topListCoverCmp","staticRenderFns","components","TopList","computed","arr","coverList","forEach","console","log","item","arrItem","name","city","value","sum_visitor","push","label","handleAreaText","data","async","$store","dispatch","coverListAPI","methods","modelType","getters","associationInfo","model_type","district","street","province","aid","id","type","res","$request","component","percentage","num","total","timeConversion","time","targetUnit","resultUnit","handleSearch","list","keyword","keyname","newList","hashVal","indexOf","handlePhoneHidden","phone","replace","handleSortReverse","obj","key","reverse","hashDomain","importType","targretType","sourceType","handleAreaLevel"],"sourceRoot":""}