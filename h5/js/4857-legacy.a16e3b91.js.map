{"version":3,"file":"js/4857-legacy.a16e3b91.js","mappings":"8KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,YAAY,CAACE,YAAY,8BAA8BC,MAAM,CAAC,OAAS,IAAI,kBAAiB,EAAM,aAAaP,EAAIQ,oBAAoB,gBAAgBR,EAAIS,mBAAmB,eAAeT,EAAIU,aAAa,UAAW,IAAQ,CAAEV,EAAY,SAAEI,EAAG,YAAY,CAACE,YAAY,SAASK,MAAM,CAAGC,MAAO,OAAQC,OAAQ,QAAUN,MAAM,CAAC,IAAMP,EAAIc,SAAS,IAAM,UAAUV,EAAG,YAAY,CAACO,MAAM,CAAGC,MAAO,OAAQC,OAAQ,QAAUN,MAAM,CAAC,IAAM,EAAQ,WAA0C,EAAE,EACpkBQ,EAAkB,G,WC4BtB,G,SAAA,CACEC,MAAO,CAELC,IAAK,CACHC,KAAMC,OACNC,QAAS,KAIbC,MAAO,CACLJ,IADJ,SACAK,GACqB,KAAXA,IACFrB,KAAKa,SAAWQ,EAEpB,GAGFC,KAjBF,WAkBI,MAAO,CAELC,SAAU,GACVV,SAAU,GAEd,EAEAW,QAzBF,WA0BqB,KAAbxB,KAAKgB,MACPhB,KAAKa,SAAWb,KAAKgB,IAEzB,EAEAS,QAAS,CAIPlB,oBAJJ,SAIAmB,EAAAC,EAAAJ,GACMK,QAAQC,IACd,sCACAH,EACAC,EACAJ,EAEI,EAIAf,mBAfJ,SAeAmB,GACMC,QAAQC,IAAI,oCAAqCF,GACjD3B,KAAK2B,KAAOA,CACd,EAIA,aAtBJ,WAsBA,+JACAL,EAAA,CACAK,KAAAA,EAAAA,MAFA,SAIA,gCAJA,OAIAG,EAJA,OAKAF,QAAAA,IAAAA,qBAAAA,GACA,aACA,WAPA,4CAQI,EAKAG,OAnCJ,WAoCM/B,KAAKgC,MAAM,SAAUhC,KAAKa,SAC5B,KCjGsR,I,UCQtRoB,GAAY,OACd,EACAnC,EACAgB,GACA,EACA,KACA,WACA,MAIF,EAAemB,EAAiB,O","sources":["webpack://home_research_h5/./src/views/editPoster/components/uploadAvatar.vue?677b","webpack://home_research_h5/src/views/editPoster/components/uploadAvatar.vue","webpack://home_research_h5/./src/views/editPoster/components/uploadAvatar.vue?5647","webpack://home_research_h5/./src/views/editPoster/components/uploadAvatar.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-upload',{staticClass:\"avatar-uploader flex-center\",attrs:{\"action\":\"#\",\"show-file-list\":false,\"on-success\":_vm.handleAvatarSuccess,\"before-upload\":_vm.beforeAvatarUpload,\"http-request\":_vm.submitUpload,\"multiple\":false}},[(_vm.imageUrl)?_c('van-image',{staticClass:\"avatar\",style:({ width: '100%', height: '100%' }),attrs:{\"src\":_vm.imageUrl,\"fit\":\"fill\"}}):_c('van-image',{style:({ width: '100%', height: '100%' }),attrs:{\"src\":require('@/assets/images/avatar_default.png')}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!-- <div class=\"avatar-upload-container\"> -->\r\n  <el-upload\r\n    class=\"avatar-uploader flex-center\"\r\n    action=\"#\"\r\n    :show-file-list=\"false\"\r\n    :on-success=\"handleAvatarSuccess\"\r\n    :before-upload=\"beforeAvatarUpload\"\r\n    :http-request=\"submitUpload\"\r\n    :multiple=\"false\"\r\n  >\r\n    <van-image\r\n      v-if=\"imageUrl\"\r\n      :style=\"{ width: '100%', height: '100%' }\"\r\n      :src=\"imageUrl\"\r\n      fit=\"fill\"\r\n      class=\"avatar\"\r\n    />\r\n    <van-image\r\n      v-else\r\n      :style=\"{ width: '100%', height: '100%' }\"\r\n      :src=\"require('@/assets/images/avatar_default.png')\"\r\n    ></van-image>\r\n  </el-upload>\r\n\r\n  <!-- </div> -->\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    // 头像地址\r\n    src: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    src(newVal) {\r\n      if (newVal !== \"\") {\r\n        this.imageUrl = newVal;\r\n      }\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      // 已上传的文件列表\r\n      fileList: [],\r\n      imageUrl: \"\",\r\n    };\r\n  },\r\n\r\n  created() {\r\n    if (this.src !== \"\") {\r\n      this.imageUrl = this.src;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 文件上传成功时的钩子\r\n     */\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      console.log(\r\n        \"文件上传成功时的钩子_handleAvatarSuccess :>> \",\r\n        response,\r\n        file,\r\n        fileList\r\n      );\r\n    },\r\n    /**\r\n     * 上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传。\r\n     */\r\n    beforeAvatarUpload(file) {\r\n      console.log(\"上传文件之前的钩子_beforeAvatarUpload :>> \", file);\r\n      this.file = file;\r\n    },\r\n    /**\r\n     * 覆盖默认的上传行为，可以自定义上传的实现\r\n     */\r\n    async submitUpload() {\r\n      const data = {\r\n        file: this.file,\r\n      };\r\n      const res = await this.$request(\"aoss.fileUpload\", data);\r\n      console.log(\"上传文件之前的钩子_res :>> \", res);\r\n      this.imageUrl = res;\r\n      this.change();\r\n    },\r\n    /**\r\n     * 更改图片地址\r\n     * @returns {String} 新的图片地址\r\n     */\r\n    change() {\r\n      this.$emit(\"change\", this.imageUrl);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.avatar-uploader {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./uploadAvatar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./uploadAvatar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./uploadAvatar.vue?vue&type=template&id=7999859c&scoped=true&\"\nimport script from \"./uploadAvatar.vue?vue&type=script&lang=js&\"\nexport * from \"./uploadAvatar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./uploadAvatar.vue?vue&type=style&index=0&id=7999859c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7999859c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","handleAvatarSuccess","beforeAvatarUpload","submitUpload","style","width","height","imageUrl","staticRenderFns","props","src","type","String","default","watch","newVal","data","fileList","created","methods","response","file","console","log","res","change","$emit","component"],"sourceRoot":""}